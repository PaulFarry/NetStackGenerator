// generated by a tool
import React, { Component } from 'react';
import { {{cs_name Name}} } from '../{{cs_name Name}}';
import { Redirect, Link } from 'react-router-dom';
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';
import { faPlus, faTrash, faEdit, faEye } from '@fortawesome/free-solid-svg-icons';
import Stars from '../../../controls/rating/stars';
import Thumbnail from '../../../controls/thumbnail';
import DateTimeDisplay from '../../../controls/DateTimeDisplay';
{{#if UnderlyingType.IsReferenceData}}
import { ILoginState, UserConsumer, isInRole } from '../../../api-authorization/UserContext';
{{/if}}

interface {{cs_name Name}}RowProps {
    data: {{cs_name Name}};
}

export class {{cs_name Name}}Row extends Component<{{cs_name Name}}RowProps, any> {

        render() {
            let s = this.props.data;
            return <tr key={s.id}>
                            {{#each ListFields}}
                                {{#if IsLinkingFieldWithDetails}}
                            <td><Link to={ { pathname:'/{{kb_case LinkingField.ReferencesType.Name}}/detail/' + s.{{cml_case LinkingField.Name}} } }> { s.{{cml_case Name}} }</Link></td>
                                {{else}}
							        {{#if IsDateTime}}
							<td><DateTimeDisplay date={s.{{cml_case Name}} } /></td>
							        {{else}}
							            {{#if IsBoolean}}
							<td>{ s.{{cml_case Name}} ? 'Yes' : 'No' }</td>
							            {{else}}
                                            {{#if IsColor}}
							<td><div style={ { width: '18px', height: "18px", border: "black 1px solid", background: s.{{cml_case Name}} } as React.CSSProperties}></div></td>
                                            {{else}}
                                                {{#if IsRating}}
                            <td><span className="small" style={ { whiteSpace: "nowrap" } }><Stars count={ s.{{cml_case Name}} } /></span></td>
                                                {{else}}
                                                    {{#if IsLinkingFieldToAttachmentWithThumbnail}}
                            <td><Thumbnail id={ s.{{cml_case LinkingField.Name}} } name={ s.{{cml_case Name}} }  entityName="{{cml_case RelatedType.Name}}" /></td>
                                                    {{else}}
                            <td>{ s.{{cml_case Name}} }</td>
                                                    {{/if}}
                                                {{/if}}
                                            {{/if}}
							            {{/if}}
							        {{/if}}
                                {{/if}}
							{{/each}}
                            {{#if UnderlyingType.IsAttachmentWithThumbnail}}
                            <td> <Thumbnail id={s.id} name={ s.{{cml_case DisplayField.Name}} } entityName="{{cml_case UnderlyingType.Name}}" /> </td>
                            {{/if}}
							{{#if UnderlyingType.HasDetails}}
							<td>
                                <Link aria-label={'View'} to={ {
                                    pathname: '/{{kb_case UnderlyingType.Name}}/detail/' + s.id,
                                    state: {
                                        data: s
                                    }
                                } }><FontAwesomeIcon title="Detail" icon={faEye} /></Link>
                            </td>
							{{/if}}
							{{#if UnderlyingType.IsReferenceData}}
							{/* reference data */}
							<UserConsumer>
							{props => {
								return isInRole(props, "admin") ? (<td>
                                <Link aria-label={'Edit'} to={ {
                                    pathname: '/{{kb_case UnderlyingType.Name}}/edit/' + s.id,
                                    state: {
                                        data: s
                                    }
                                } }><FontAwesomeIcon title="Edit" icon={faEdit} /></Link>
							</td>) : null;} }
							</UserConsumer>
							{{#if UnderlyingType.CanDelete}}
							<UserConsumer>
							{props => {
								return isInRole(props, "admin") ? (<td>
                                <Link aria-label={'Delete'} to={ {
                                    pathname: '/{{kb_case UnderlyingType.Name}}/delete/' + s.id,
                                    state: {
                                        data: s
                                    }
                                } }><FontAwesomeIcon title="Delete" icon={faTrash} /></Link>
							</td>) : null; } }
							</UserConsumer>
							{{/if}}
							{{else}}
							{/* non-reference data */}
							<td>
                                <Link aria-label={'Edit'} to={ {
                                    pathname: '/{{kb_case UnderlyingType.Name}}/edit/' + s.id,
                                    state: {
                                        data: s
                                    }
                                } }><FontAwesomeIcon title="Edit" icon={faEdit} /></Link>
							</td>
							{{#if UnderlyingType.CanDelete}}
							<td>
                                <Link aria-label={'Delete'} to={ {
                                    pathname: '/{{kb_case UnderlyingType.Name}}/delete/' + s.id,
                                    state: {
                                        data: s
                                    }
                                } }><FontAwesomeIcon title="Delete" icon={faTrash} /></Link>
							</td>
							{{/if}}
							{{/if}}
                        </tr>;
        }
}